{"ast":null,"code":"import _classCallCheck from \"/Users/ke-vinhhoang/Documents/FinalProject/facerecognition/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ke-vinhhoang/Documents/FinalProject/facerecognition/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ke-vinhhoang/Documents/FinalProject/facerecognition/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ke-vinhhoang/Documents/FinalProject/facerecognition/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ke-vinhhoang/Documents/FinalProject/facerecognition/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ke-vinhhoang/Documents/FinalProject/facerecognition/src/App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation';\nimport Rank from './components/Rank/Rank';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport './App.css';\nvar app = new Clarifai.App({\n  apiKey: '39d724ef70ae41269091815b2c038508'\n});\nvar particlesOptions = {\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    },\n    size: {\n      enable: true,\n      value: 2\n    }\n  }\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.calculateFaceLocation = function (data) {\n      var boxArray = []; // const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n\n      var image = document.getElementById('inputimage');\n      var width = Number(image.width);\n      var height = Number(image.height); // console.log(width, height);\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = data.outputs[0].data.regions[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var face = _step.value;\n          boxArray.push({\n            leftCol: face.region_info.bounding_box.left_col * width,\n            topRow: face.region_info.bounding_box.top_row * height,\n            rightCol: width - face.region_info.bounding_box.right_col * width,\n            bottomRow: height - face.region_info.bounding_box.bottom_row * height\n          });\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return boxArray;\n    };\n\n    _this.displayFaceBox = function (boxValue) {\n      console.log(boxValue);\n\n      _this.setState({\n        box: boxValue\n      });\n    };\n\n    _this.onInputChange = function (event) {\n      _this.setState({\n        input: event.target.value\n      });\n    };\n\n    _this.onButtonSubmit = function () {\n      _this.setState({\n        imageUrl: _this.state.input\n      });\n\n      app.models.predict(Clarifai.DEMOGRAPHICS_MODEL, _this.state.input).then(function (response) {\n        return _this.displayFaceBox(_this.calculateFaceLocation(response));\n      }).catch(function (err) {\n        return console.log(err);\n      }); // .then(                         // check the breakdown of the nested object\n      //   function(response) {\n      //     console.log(response);\n      //   }\n      // )\n      // console.log('characteristics', response.outputs[0].data.regions[0].data.face);\n      // console.log('face box', response.outputs[0].data.regions[0].region_info.bounding_box);\n    };\n\n    _this.state = {\n      input: '',\n      imageUrl: '',\n      box: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Particles, {\n        className: \"particles\",\n        params: particlesOptions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(Navigation, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(Rank, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(FaceRecognition, {\n        box: this.state.box,\n        imageUrl: this.state.imageUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App; // (1) since onInputChange is a part of the 'App' class, to access it, we need to do 'this.onInputChange' because onInputChange is a property of the 'App'","map":{"version":3,"sources":["/Users/ke-vinhhoang/Documents/FinalProject/facerecognition/src/App.js"],"names":["React","Component","Particles","Clarifai","Navigation","Rank","ImageLinkForm","FaceRecognition","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","size","calculateFaceLocation","data","boxArray","image","document","getElementById","width","Number","height","outputs","regions","face","push","leftCol","region_info","bounding_box","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","boxValue","console","log","setState","box","onInputChange","event","input","target","onButtonSubmit","imageUrl","state","models","predict","DEMOGRAPHICS_MODEL","then","response","catch","err"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,eAAP,MAA4B,8CAA5B;AACA,OAAO,WAAP;AAEA,IAAMC,GAAG,GAAG,IAAIL,QAAQ,CAACM,GAAb,CAAiB;AAC3BC,EAAAA,MAAM,EAAE;AADmB,CAAjB,CAAZ;AAIA,IAAMC,gBAAgB,GAAG;AACvBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAE,GADD;AAENC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,IADD;AAEPC,QAAAA,UAAU,EAAE;AAFL;AAFH,KADC;AAQTC,IAAAA,IAAI,EAAE;AACJF,MAAAA,MAAM,EAAE,IADJ;AAEJF,MAAAA,KAAK,EAAE;AAFH;AARG;AADY,CAAzB;;IAgBML,G;;;;;AACJ,iBAAc;AAAA;;AAAA;;AACZ;;AADY,UASdU,qBATc,GASU,UAACC,IAAD,EAAU;AAChC,UAAIC,QAAQ,GAAG,EAAf,CADgC,CAGhC;;AACA,UAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAd;AACA,UAAMC,KAAK,GAAGC,MAAM,CAACJ,KAAK,CAACG,KAAP,CAApB;AACA,UAAME,MAAM,GAAGD,MAAM,CAACJ,KAAK,CAACK,MAAP,CAArB,CANgC,CAOhC;;AAPgC;AAAA;AAAA;;AAAA;AAShC,6BAAmBP,IAAI,CAACQ,OAAL,CAAa,CAAb,EAAgBR,IAAhB,CAAqBS,OAAxC,8HAAiD;AAAA,cAAtCC,IAAsC;AAC/CT,UAAAA,QAAQ,CAACU,IAAT,CAAc;AACZC,YAAAA,OAAO,EAAEF,IAAI,CAACG,WAAL,CAAiBC,YAAjB,CAA8BC,QAA9B,GAAyCV,KADtC;AAEZW,YAAAA,MAAM,EAAEN,IAAI,CAACG,WAAL,CAAiBC,YAAjB,CAA8BG,OAA9B,GAAwCV,MAFpC;AAGZW,YAAAA,QAAQ,EAAEb,KAAK,GAAIK,IAAI,CAACG,WAAL,CAAiBC,YAAjB,CAA8BK,SAA9B,GAA0Cd,KAHjD;AAIZe,YAAAA,SAAS,EAAEb,MAAM,GAAIG,IAAI,CAACG,WAAL,CAAiBC,YAAjB,CAA8BO,UAA9B,GAA2Cd;AAJpD,WAAd;AAMD;AAhB+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAkBhC,aAAON,QAAP;AACD,KA5Ba;;AAAA,UA8BdqB,cA9Bc,GA8BG,UAACC,QAAD,EAAc;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AACA,YAAKG,QAAL,CAAc;AAAEC,QAAAA,GAAG,EAAEJ;AAAP,OAAd;AACD,KAjCa;;AAAA,UAmCdK,aAnCc,GAmCE,UAACC,KAAD,EAAW;AACzB,YAAKH,QAAL,CAAc;AAAEI,QAAAA,KAAK,EAAED,KAAK,CAACE,MAAN,CAAarC;AAAtB,OAAd;AACD,KArCa;;AAAA,UAuCdsC,cAvCc,GAuCG,YAAM;AACrB,YAAKN,QAAL,CAAc;AAAEO,QAAAA,QAAQ,EAAE,MAAKC,KAAL,CAAWJ;AAAvB,OAAd;;AACA1C,MAAAA,GAAG,CAAC+C,MAAJ,CACGC,OADH,CAEIrD,QAAQ,CAACsD,kBAFb,EAGI,MAAKH,KAAL,CAAWJ,KAHf,EAIGQ,IAJH,CAIQ,UAAAC,QAAQ;AAAA,eAAI,MAAKjB,cAAL,CAAoB,MAAKvB,qBAAL,CAA2BwC,QAA3B,CAApB,CAAJ;AAAA,OAJhB,EAKGC,KALH,CAKS,UAAAC,GAAG;AAAA,eAAIjB,OAAO,CAACC,GAAR,CAAYgB,GAAZ,CAAJ;AAAA,OALZ,EAFqB,CAQnB;AACA;AACA;AACA;AACA;AACE;AACA;AACL,KAtDa;;AAEZ,UAAKP,KAAL,GAAa;AACXJ,MAAAA,KAAK,EAAE,EADI;AAEXG,MAAAA,QAAQ,EAAE,EAFC;AAGXN,MAAAA,GAAG,EAAE;AAHM,KAAb;AAFY;AAOb;;;;6BAiDQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,WAArB;AACE,QAAA,MAAM,EAAEpC,gBADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAIE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAKE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAME,oBAAC,aAAD;AACE,QAAA,aAAa,EAAE,KAAKqC,aADtB;AAEE,QAAA,cAAc,EAAE,KAAKI,cAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,EAUE,oBAAC,eAAD;AAAiB,QAAA,GAAG,EAAE,KAAKE,KAAL,CAAWP,GAAjC;AAAsC,QAAA,QAAQ,EAAE,KAAKO,KAAL,CAAWD,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,CADF;AAcD;;;;EAxEepD,S;;AA2ElB,eAAeQ,GAAf,C,CAEA","sourcesContent":["import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation';\nimport Rank from './components/Rank/Rank';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport './App.css';\n\nconst app = new Clarifai.App({\n  apiKey: '39d724ef70ae41269091815b2c038508'\n });\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    },\n    size: {\n      enable: true,\n      value: 2\n    }\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: [],\n    }\n  }\n\n  calculateFaceLocation = (data) => {\n    let boxArray = [];\n\n    // const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    // console.log(width, height);\n\n    for (const face of data.outputs[0].data.regions) {\n      boxArray.push({\n        leftCol: face.region_info.bounding_box.left_col * width,\n        topRow: face.region_info.bounding_box.top_row * height,\n        rightCol: width - (face.region_info.bounding_box.right_col * width),\n        bottomRow: height - (face.region_info.bounding_box.bottom_row * height)\n      });\n    }\n    \n    return boxArray;\n  }\n\n  displayFaceBox = (boxValue) => {\n    console.log(boxValue);\n    this.setState({ box: boxValue });\n  }\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value });\n  }\n\n  onButtonSubmit = () => {\n    this.setState({ imageUrl: this.state.input });\n    app.models\n      .predict(\n        Clarifai.DEMOGRAPHICS_MODEL, \n        this.state.input)\n      .then(response => this.displayFaceBox(this.calculateFaceLocation(response)))\n      .catch(err => console.log(err));\n      // .then(                         // check the breakdown of the nested object\n      //   function(response) {\n      //     console.log(response);\n      //   }\n      // )\n        // console.log('characteristics', response.outputs[0].data.regions[0].data.face);\n        // console.log('face box', response.outputs[0].data.regions[0].region_info.bounding_box);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Particles className='particles'\n          params={particlesOptions}\n        />\n        <Navigation />\n        <Rank />\n        <ImageLinkForm \n          onInputChange={this.onInputChange} \n          onButtonSubmit={this.onButtonSubmit}\n        />\n        <FaceRecognition box={this.state.box} imageUrl={this.state.imageUrl}/> \n      </div>\n    );\n  }\n}\n\nexport default App;\n\n// (1) since onInputChange is a part of the 'App' class, to access it, we need to do 'this.onInputChange' because onInputChange is a property of the 'App'\n"]},"metadata":{},"sourceType":"module"}